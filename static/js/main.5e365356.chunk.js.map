{"version":3,"sources":["components/Button.jsx","components/Square.jsx","App.js","index.js"],"names":["Button","_ref","resetGame","_jsx","onClick","children","Square","ind","updateSquares","clsName","motion","div","initial","scale","animate","className","span","App","_useState","useState","Array","fill","_useState2","_slicedToArray","squares","setSquares","_useState3","_useState4","turn","setTurn","_useState5","_useState6","winner","setWinner","s","W","_i","_combos","length","combo","_combo","a","b","c","checkWinner","_step","_iterator","_createForOfIteratorHelper","n","done","value","err","e","f","checkEndTheGame","_jsxs","from","map","concat","AnimatePresence","opacity","exit","h2","y","transition","delay","duration","_Fragment","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.5e365356.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\nconst Button = ({ resetGame }) => {\r\n    return <button onClick={() => resetGame()}>New Game</button>;\r\n};\r\n\r\nexport default Button;","import \"./Square.scss\";\r\nimport { motion } from \"framer-motion\";\r\nimport React  from 'react';\r\n\r\nconst Square = ({ ind, updateSquares, clsName }) => {\r\n    const handleClick = () => {\r\n        updateSquares(ind);\r\n    };\r\n    return (\r\n        <motion.div\r\n            initial={{ scale: 0 }}\r\n            animate={{ scale: 1 }}\r\n            className=\"square\"\r\n            onClick={handleClick}\r\n        >\r\n            {clsName && (\r\n                <motion.span\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    className={clsName}\r\n                ></motion.span>\r\n            )}\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Square;","import { motion, AnimatePresence } from \"framer-motion\";\nimport { useState } from \"react\";\nimport Button from \"./components/Button\";\nimport Square from \"./components/Square\";\nimport React  from 'react';\n\nfunction App() {\n    const [squares, setSquares] = useState(Array(9).fill(\"\"));\n    const [turn, setTurn] = useState(\"x\");\n    const [winner, setWinner] = useState(null);\n\n    const checkEndTheGame = () => {\n        for (let square of squares) {\n            if (!square) return false;\n        }\n        return true;\n    };\n\n    const checkWinner = () => {\n        const combos = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n\n        for (let combo of combos) {\n            const [a, b, c] = combo;\n            if (\n                squares[a] &&\n                squares[a] === squares[b] &&\n                squares[a] === squares[c]\n            ) {\n                return squares[a];\n            }\n        }\n        return null;\n    };\n\n    const updateSquares = (ind) => {\n        if (squares[ind] || winner) {\n            return;\n        }\n        const s = squares;\n        s[ind] = turn;\n        setSquares(s);\n        setTurn(turn === \"x\" ? \"o\" : \"x\");\n        const W = checkWinner();\n        if (W) {\n            setWinner(W);\n        } else if (checkEndTheGame()) {\n            setWinner(\"x | o\");\n        }\n    };\n\n    const resetGame = () => {\n        setSquares(Array(9).fill(\"\"));\n        setTurn(\"x\");\n        setWinner(null);\n    };\n\n    return (\n        <div className=\"tic-tac-toe\">\n            <h1> TIC-TAC-TOE </h1>\n            <Button resetGame={resetGame} />\n            <div className=\"game\">\n                {Array.from(\"012345678\").map((ind) => (\n                    <Square\n                        key={ind}\n                        ind={ind}\n                        updateSquares={updateSquares}\n                        clsName={squares[ind]}\n                    />\n                ))}\n            </div>\n            <div className={`turn ${turn === \"x\" ? \"left\" : \"right\"}`}>\n                <Square clsName=\"x\" />\n                <Square clsName=\"o\" />\n            </div>\n            <AnimatePresence>\n                {winner && (\n                    <motion.div\n                        key={\"parent-box\"}\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                        className=\"winner\"\n                    >\n                        <motion.div\n                            key={\"child-box\"}\n                            initial={{ scale: 0 }}\n                            animate={{ scale: 1 }}\n                            exit={{ scale: 0, opacity: 0 }}\n                            className=\"text\"\n                        >\n                            <motion.h2\n                                initial={{ scale: 0, y: 100 }}\n                                animate={{\n                                    scale: 1,\n                                    y: 0,\n                                    transition: {\n                                        y: { delay: 0.7 },\n                                        duration: 0.7,\n                                    },\n                                }}\n                            >\n                                {winner === \"x | o\"\n                                    ? \"Draw :/\"\n                                    : \"Win :)\"}\n                            </motion.h2>\n                            <motion.div\n                                initial={{ scale: 0 }}\n                                animate={{\n                                    scale: 1,\n                                    transition: {\n                                        delay: 1.3,\n                                        duration: 0.2,\n                                    },\n                                }}\n                                className=\"win\"\n                            >\n                                {winner === \"x | o\" ? (\n                                    <>\n                                        <Square clsName=\"x\" />\n                                        <Square clsName=\"o\" />\n                                    </>\n                                ) : (\n                                    <>\n                                        <Square clsName={winner} />\n                                    </>\n                                )}\n                            </motion.div>\n                            <motion.div\n                                initial={{ scale: 0 }}\n                                animate={{\n                                    scale: 1,\n                                    transition: { delay: 1.5, duration: 0.3 },\n                                }}\n                            >\n                                <Button resetGame={resetGame} />\n                            </motion.div>\n                        </motion.div>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}